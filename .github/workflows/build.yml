name: Build and deploy

on:
  - push

jobs:
  build-clock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ./clock
        run: pnpm i

      - name: Lint
        working-directory: ./clock
        run: pnpm lint

      - name: Format
        working-directory: ./clock
        run: pnpm format-check

      - name: Build
        working-directory: ./clock
        run: pnpm build

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          working-directory: clock
          start: npx serve -s build
          record: ${{ secrets.CYPRESS_RECORD_KEY != '' }}
          install-command: pnpm i

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        uses: reggionick/s3-deploy@v3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          folder: ./clock/build
          bucket: ${{ secrets.FRONTEND_BUCKET }}
          bucket-region: eu-west-1
          delete-removed: true
          private: true
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          invalidation: index.html

      - name: Restart all screens
        if: github.ref == 'refs/heads/master'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          curl -sL https://firebase.tools | bash
          for baseKey in fotbolti handbolti safamyri ibv; do
            firebase -P vikes-match-clock-firebase database:set /$baseKey/controller/refreshToken -f -d '"'$(uuidgen)'"' --token $FIREBASE_TOKEN
          done

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - build-clock
    steps:
      - uses: actions/checkout@v2

      - name: Set error color
        if: needs.build.result != 'success'
        run: echo "SLACK_COLOR=#FF0000" >> $GITHUB_ENV

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Vikes matchclock
          SLACK_ICON_EMOJI: ":vikes:"
          SLACK_TITLE: Vikes github actions run
          SLACK_FOOTER: "Eurovikes"
